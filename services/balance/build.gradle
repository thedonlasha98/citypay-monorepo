plugins {
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'java'
}

bootJar {
    archiveBaseName = 'balance'
    archiveVersion = '0.0.1'
}

group = 'io.citypay.core.balance'
version = '0.0.1'
description = 'Balance Microservice'

//dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation project(':libs:shared')
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//}

dependencies {
    implementation project(':libs:shared')
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.12'
//    implementation 'org.flywaydb:flyway-core'
//    implementation 'org.flywaydb:flyway-database-postgresql'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}